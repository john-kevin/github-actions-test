name: Test Workflow - Kevs # Name of the Workflow
# on: push 
on:  # Defines the trigger. More on https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows
  push:
    branches:
      - master
      - '!test/*' # ignore
    # paths-ignore: 
    #   - '.github/workflows/*'
  workflow_dispatch:
env:
  WF_ENV: ${{ secrets.WF_ENV }}
  GITHUB_TOKEN : ${{ secrets.GITHUB_TOKEN }}
  KEV: Soriano
  # OUT OF THE BOX ENV VARS https://docs.github.com/en/actions/learn-github-actions/variables#default-environment-variables
jobs: 
  Build: # Name of the Job
    # environment: testing  # udemy maximillian lesson 83 # uses env-wide specific secrets, but you have to setup an evnuronemnt first and create secrets under that environemnts
    env:
      BUILD-KEV: sosoriano
    runs-on: ubuntu-latest # Defines the runners. 
    # More on (hosted) https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners/about-github-hosted-runners 
    # (self hosted) https://docs.github.com/en/actions/hosting-your-own-runners/managing-self-hosted-runners/about-self-hosted-runners
    outputs:
      random-file-name: ${{ steps.publish.outputs.something }}
      random-file-name2: ${{ steps.publish.outputs.something }}
    steps: 
      - name: Get codes
        uses: actions/checkout@v3 # Take advantage of actions. More on https://github.com/marketplace?type=actions
      - name: Patingin ng repo
        run: ls -latrh
      # - name: Caching test
      #   uses: actions/cache@v3
      #   with:
      #     path: |
      #       dist
      #       package.json
      #     key: my-first-cache-${{ hashFiles('package.json') }} # if theres a change in package.json, it will generate new hash, indicating a new  cache
      - name: Create file in dist
        run: |
          touch package.json
          mkdir dist
          touch dist/kevinsoriano.txt
          echo "ssetsetse" > dist/kevinsoriano.txt
      - name: Setup Terraform 
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.7.5"
      - name: Patingin nga version ng TF
        id: test-step-condition
        run: terraforms --version
      - name: Upload artifacts
        if: failure() && steps.test-step-condition.outcome == 'failure' # Add conditional steps
        # More on: https://docs.github.com/en/actions/using-jobs/using-conditions-to-control-job-execution
        # and : https://github.com/orgs/community/discussions/50729
        # max's video: https://docs.github.com/en/actions/learn-github-actions/contexts#steps-context
        # failure () - see more in ./images/special-conditional-functions.png
        uses: actions/upload-artifact@v3
        with:
          name: artifact-jks-1
          path: |
            dist
            package.json
      - name: Publish an output
        id: publish
        run: |
          echo "something=Hehehehehe" >> $GITHUB_OUTPUT
          echo "something2=hohohoeee" >> $GITHUB_OUTPUT
      - name: Ouput job specific env Variables
        run: |
          echo "BUILD-KEV: ${{ env.BUILD-KEV }}"
  Read-Artifacts:
    if: failure()
    needs: [Build] # [first-job, pre-job, ..] # Needs is needed to actuall pull-off the failure execution here. 
    runs-on: ubuntu-latest
    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: artifact-jks-1
      - name: Ouput artifacts contents
        run: ls
      - name: Ouput filename
        run: |
          echo "${{ needs.Build.outputs.random-file-name }}"
          echo "${{ needs.Build.outputs.random-file-name2 }}"
      - name: Ouput job specific env Variables
        run: |
          echo "BUILD-KEV: ${{ env.BUILD-KEV }}"          
          echo "KEV: $KEV"
  Deploy:
    needs: [Build, Read-Artifacts]
    runs-on: ubuntu-latest
    steps:
      - name: Ouput artifacts contents
        run: ls
  Deploy2:
    needs: [Deploy, Read-Artifacts]
    runs-on: ubuntu-latest
    steps:
      - name: Ouput artifacts contents
        run: ls
  Deploy3:
    needs: [Deploy2, Build]
    runs-on: ubuntu-latest
    steps:
      - name: Ouput artifacts contents
        run: ls
#steps:
# - uses: actions/checkout@v4
# - uses: hashicorp/setup-terraform@v3